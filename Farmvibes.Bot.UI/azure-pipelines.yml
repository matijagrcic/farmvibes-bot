# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master
- staging

pr:
- master
- staging

pool:
  vmImage: ubuntu-latest

stages:
- stage: build
  jobs:
  - job: build
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

    - task: CmdLine@2
      condition: eq(variables['build.sourceBranch'], 'refs/heads/staging')
      inputs:
        script: 'echo REACT_APP_API_ENDPOINT = $(API_ENDPOINT_STAGING) > .env'
      displayName: 'Generate staging .env'

    - task: CmdLine@2
      condition: eq(variables['build.sourceBranch'], 'refs/heads/master')
      inputs:
        script: 'echo REACT_APP_API_ENDPOINT=$(API_ENDPOINT_PROD) > .env'
      displayName: 'Generate prod .env'

    - script: |
        npm install --legacy-peer-deps
      displayName: 'npm install'

    - script: |
        npx eslint . --ext .js
      displayName: 'Run Linter'

    - script: |
        npm run build
      displayName: 'npm build'

    - task: accessibility-insights@3
      displayName: 'Run accessibility scan'
      inputs:
        hostingMode: staticSite
        staticSiteDir: build
        failOnAccessibilityError: false


    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: build


- stage: deploy
  condition: or(eq(variables['build.sourceBranch'], 'refs/heads/staging'), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
    - job: deploy
      steps:
      - pwsh: |
          git checkout $(Build.SourceBranchName)
          git remote add onebotfrontend https://heroku:${env:PAT}@git.heroku.com/onebotfrontend.git
          git push onebotfrontend $(Build.SourceBranchName):master --force
        displayName: Deploy Frontend to onebotfrontend
        env:
          PAT: $(PAT)
        workingDirectory: $(Build.SourcesDirectory)
      - pwsh: |
          git checkout $(Build.SourceBranchName)
          git remote add ethiochickenfe https://heroku:${env:PAT}@git.heroku.com/ethiochickenfe.git
          git push ethiochickenfe $(Build.SourceBranchName):master --force
        displayName: Deploy Frontend to Ethio Chicken Frontend
        env:
          PAT: $(PAT)
        workingDirectory: $(Build.SourcesDirectory)
      - pwsh: |
          git checkout $(Build.SourceBranchName)
          git remote add ocpfe https://heroku:${env:PAT}@git.heroku.com/ocpfe.git
          git push ocpfe $(Build.SourceBranchName):master --force
        displayName: Deploy Frontend to OCP Frontend
        env:
          PAT: $(PAT)
        workingDirectory: $(Build.SourcesDirectory)
      - pwsh: |
          git checkout $(Build.SourceBranchName)
          git remote add alpfe https://heroku:${env:PAT}@git.heroku.com/alpfe.git    
          git push alpfe $(Build.SourceBranchName):master --force
        displayName: Deploy Frontend to ALP Frontend
        env:
          PAT: $(PAT)
        workingDirectory: $(Build.SourcesDirectory)
        
